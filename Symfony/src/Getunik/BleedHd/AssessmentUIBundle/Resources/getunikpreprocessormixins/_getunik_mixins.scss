
// cross browser font smoothing
@mixin font-smoothing() {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* apply a natural box layout model to selected elements */
@mixin box-sizing($mode: "border-box") {
    -moz-box-sizing: $mode;
    -webkit-box-sizing: $mode;
    box-sizing: $mode;
}

// rem font-size with fallback
@mixin font-size($font-size) {
    font-size: $font-size;
    font-size: ($font-size / $base-font-size) * 1rem;
}

@mixin letter-spacing($letter-spacing) {
    letter-spacing: ($letter-spacing / $base-font-size) * 1rem;
}

// radio button replacment with image || svg
// markup example:
// <input type="radio" class="getunik-radio" name="stored_customer_salutation" id="stored_customer_title_mr" value="male">
// <label for="stored_customer_title_mr">
//     Herr
// </label>
@mixin replace-radio($image, $imageChecked, $width: 22px, $height: 22px, $paddingLeft: 45px, $labelColorChecked: #00FF00, $selectorRadio: "getunik-radio") {
    input.#{$selectorRadio} {
        // hide original checkbox
        position: absolute;
        z-index: -1000;
        visibility: hidden;

        & + label {
            position: relative;
            min-height: $height;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            display: inline-block;
            padding-left: $paddingLeft;
            vertical-align: middle;
            cursor: pointer;

            &:before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: $width;
                height: $height;
                background-image: url($image);
                background-size: $width $height;
                background-repeat: no-repeat;
                background-position: 0 0;
            }
        }

        &:checked + label {
            color: $labelColorChecked;

            &:before {
                background-image: url($imageChecked);
            }
        }
    }
}

// checkbox replacment with image || svg
// markup example:
// <input type="checkbox" name="checkbox-newsletter" id="checkbox-newsletter" class="lema-checkbox getunik-checkbox" checked="checked"/>
// <label for="checkbox-newsletter">Ich möchte das der WWF mich über seine Projekte informiert</label>
@mixin replace-checkbox($image, $imageChecked, $width: 22px, $height: 22px, $paddingLeft: 30px, $labelColorChecked: #00FF00, $selectorCheckbox: "getunik-checkbox") {
    input.#{$selectorCheckbox} {
        // hide original checkbox
        position: absolute;
        z-index: -1000;
        visibility: hidden;

        & + label {
            min-height: $height;
            position: relative;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            padding-left: $paddingLeft;
            display: inline-block;
            vertical-align: middle;
            cursor: pointer;

            &:before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: $width;
                height: $height;
                background-image: url($image);
                background-size: $width $height;
                background-repeat: no-repeat;
                background-position: 0 0;
            }
        }

        &:checked + label {
            color: $labelColorChecked;

            &:before {
                background-image: url($imageChecked);
            }
        }
    }
}

@mixin img-responsive() {
    max-width: 100%;
    min-width: 100%;
}

